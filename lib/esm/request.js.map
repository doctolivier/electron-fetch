{
  "version": 3,
  "sources": ["../../src/request.ts"],
  "sourcesContent": ["import {\r\n  format as formatURL,\r\n  parse as parseURL,\r\n  UrlWithStringQuery,\r\n} from \"node:url\";\r\nimport { clone, extractContentType, getTotalBytes } from \"./common.js\";\r\n\r\nimport { BodyInit, RequestInit } from \"./types.js\";\r\nimport Headers from \"./headers.js\";\r\nimport Body from \"./body.js\";\r\n\r\nexport type RequestInfo = Request | RequestInit | string;\r\n\r\n/**\r\n * Request class\r\n *\r\n * @param {string|Request} input Url or Request instance\r\n * @param {Object} init Custom options\r\n */\r\nexport default class Request extends Body {\r\n  method: any;\r\n  redirect: any;\r\n  signal: any;\r\n  chunkedEncoding: boolean;\r\n  useElectronNet: boolean;\r\n  useSessionCookies: boolean;\r\n  follow: any;\r\n  counter: number;\r\n  session: Electron.Session;\r\n\r\n  constructor(input: RequestInfo, init: RequestInit = {}) {\r\n    let parsedURL;\r\n\r\n    // normalize input\r\n    if (!(input instanceof Request)) {\r\n      // @ts-ignore\r\n      if (input && input.href) {\r\n        // in order to support Node.js' Url objects; though WHATWG's URL objects\r\n        // will fall into this branch also (since their `toString()` will return\r\n        // `href` property anyway)\r\n        // @ts-ignore\r\n        parsedURL = parseURL(input.href);\r\n      } else {\r\n        // coerce input to a string before attempting to parse\r\n        parsedURL = parseURL(`${input}`);\r\n      }\r\n      input = {} as RequestInfo;\r\n    } else {\r\n      parsedURL = parseURL(input.url);\r\n    }\r\n\r\n    const method = init.method || (input as Request).method || \"GET\";\r\n\r\n    if (\r\n      (init.body != null ||\r\n        (input instanceof Request && input.body !== null)) &&\r\n      (method === \"GET\" || method === \"HEAD\")\r\n    ) {\r\n      throw new TypeError(\"Request with GET/HEAD method cannot have body\");\r\n    }\r\n\r\n    const inputBody =\r\n      init.body != null\r\n        ? (init.body as BodyInit)\r\n        : input instanceof Request && input.body !== null\r\n        ? clone(input)\r\n        : undefined;\r\n\r\n    super(inputBody as BodyInit | undefined, {\r\n      timeout: init.timeout || (input as Request).timeout || 0,\r\n      size: init.size || (input as Request).size || 0,\r\n    });\r\n\r\n    // fetch spec options\r\n    this.method = method.toUpperCase();\r\n    this.redirect = init.redirect || (input as Request).redirect || \"follow\";\r\n    this.signal = init.signal || (input as Request).signal || null;\r\n    // @ts-ignore\r\n    this.headers = new Headers(init.headers || input.headers || {});\r\n    this.headers.delete(\"Content-Length\"); // user cannot set content-length themself as per fetch spec\r\n    this.chunkedEncoding = false;\r\n    this.useElectronNet =\r\n      init.useElectronNet !== undefined // have to do this instead of || because it can be set to false\r\n        ? init.useElectronNet\r\n        : (input as Request).useElectronNet;\r\n\r\n    // istanbul ignore if\r\n    if (this.useElectronNet && !process.versions.electron)\r\n      throw new Error(\"Cannot use Electron/net module on Node.js!\");\r\n\r\n    if (this.useElectronNet === undefined) {\r\n      this.useElectronNet = Boolean(process.versions.electron);\r\n    }\r\n\r\n    if (this.useElectronNet) {\r\n      this.useSessionCookies =\r\n        init.useSessionCookies !== undefined\r\n          ? init.useSessionCookies\r\n          : (input as Request).useSessionCookies;\r\n    }\r\n\r\n    if (init.body != null) {\r\n      const contentType = extractContentType(this);\r\n      if (contentType !== null && !this.headers.has(\"Content-Type\")) {\r\n        this.headers.append(\"Content-Type\", contentType);\r\n      }\r\n    }\r\n\r\n    // server only options\r\n    this.follow =\r\n      init.follow !== undefined\r\n        ? init.follow\r\n        : (input as Request).follow !== undefined\r\n        ? (input as Request).follow\r\n        : 20;\r\n    this.counter = init.counter || (input as Request).counter || 0;\r\n    this.session = init.session || (input as Request).session;\r\n\r\n    this.url = parsedURL;\r\n    Object.defineProperty(this, Symbol.toStringTag, {\r\n      value: \"Request\",\r\n      writable: false,\r\n      enumerable: false,\r\n      configurable: true,\r\n    });\r\n  }\r\n\r\n  set url(url: UrlWithStringQuery) {\r\n    this.url = url;\r\n  }\r\n\r\n  get url(): string {\r\n    return formatURL(this.url);\r\n  }\r\n\r\n  /**\r\n   * Clone this request\r\n   *\r\n   * @return {Request}\r\n   */\r\n  clone() {\r\n    return new Request(this);\r\n  }\r\n}\r\n\r\nObject.defineProperty(Request.prototype, Symbol.toStringTag, {\r\n  value: \"RequestPrototype\",\r\n  writable: false,\r\n  enumerable: false,\r\n  configurable: true,\r\n});\r\n"],
  "mappings": "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",
  "names": []
}
